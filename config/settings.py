"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)


PROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ROOT_DIR = os.path.dirname(PROJECT_DIR)

APPS_DIR = os.path.join(PROJECT_DIR, 'apps')

BASE_DIR = os.path.join(PROJECT_DIR, 'config')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z51o1y68#04@q=mugf*v-vh&ke2s!gs$)g!yl1%3pzc+o@e!*g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

SYS_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APP = [
    'django_adminlte',
    'debug_toolbar',
    'widget_tweaks',
    'ckeditor',
    'django_summernote',
    # 'ckeditor_uploader',
]

NEW_APPS = [
    'apps.common',
    'apps.setting',
    'apps.student',
]

INSTALLED_APPS = SYS_APPS + THIRD_PARTY_APP + NEW_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(PROJECT_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/home/shital/workstation_medias/edainiki/static'
STATICFILES_DIRS = (
    os.path.join(PROJECT_DIR, 'static'),
)


EXCLUDE_FIELDS = ['id', 'created_at', 'modified_at']

MEDIA_ROOT = '/home/shital/workstation_medias/edainiki/media'
MEDIA_URL = '/media/'

INTERNAL_IPS = [
    '127.0.0.1',
    'localhost'
]

CKEDITOR_JQUERY_URL = os.path.join(STATIC_URL, 'bower_components/jquery/dist/jquery.min.js')
CKEDITOR_UPLOAD_PATH = "uploads/"

CKEDITOR_CONFIGS = {
    'default': {
        'skin': 'bootstrapck',
        'toolbar_CustomToolbarConfig': [
            {
                'name': 'document',
                'items': [
                    '-', 'Save', 'NewPage', 'Preview', 'Print', '-', 'Templates', 'Cut', 'Copy', 'Paste',
                    'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'
                ]
            },
            {
                'name': 'editing',
                'items': ['Find', 'Replace', '-']
            },
            {
                'name': 'basicstyles',
                'items': ['Bold', 'Italic', 'Underline', 'Subscript', 'Superscript']
            },
            {
                'name': 'paragraph',
                'items': [
                    'NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-',
                    'Blockquote', 'CreateDiv', '-', 'JustifyLeft', 'JustifyCenter',
                    'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl',
                    'Language'
                ]
            },
            {
                'name': 'links',
                'items': ['Link', 'Unlink', 'Anchor']
            },
            {
                'name': 'insert',
                'items': ['Image', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak']
            },
            '/',
            {
                'name': 'styles',
                'items': ['Styles', 'Format', 'Font', 'FontSize']
            },
            {
                'name': 'colors',
                'items': ['TextColor']
            },
            {
                'name': 'tools',
                'items': ['Maximize']
            },
        ],
        'toolbar': 'CustomToolbarConfig',  # put selected toolbar config here
        'indent': False,
        'width': '100%',
    }
}

CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_UPLOAD_SLUGIFY_FILENAME = False
CKEDITOR_BROWSE_SHOW_DIRS = True


X_FRAME_OPTIONS = 'SAMEORIGIN'

SUMMERNOTE_THEME = 'bs3'

# SUMMERNOTE_CONFIG = {
#     # Using SummernoteWidget - iframe mode, default
#     'iframe': True,
#
#     # Or, you can set it as False to use SummernoteInplaceWidget by default - no iframe mode
#     # In this case, you have to load Bootstrap/jQuery stuff by manually.
#     # Use this when you're already using Bootstraip/jQuery based themes.
#     'iframe': False,
#
#     # You can put custom Summernote settings
#     'summernote': {
#         # As an example, using Summernote Air-mode
#         'airMode': False,
#
#         # Change editor size
#         'width': '100%',
#         'height': '480',
#
#         # Use proper language setting automatically (default)
#         'lang': None,
#
#         # Or, set editor language/locale forcely
#         'lang': 'ko-KR',
#
#         # You can also add custom settings for external plugins
#         'print': {
#             'stylesheetUrl': '/some_static_folder/printable.css',
#         },
#         'codemirror': {
#             'mode': 'htmlmixed',
#             'lineNumbers': 'true',
#             # You have to include theme file in 'css' or 'css_for_inplace' before using it.
#             'theme': 'monokai',
#         },
#     },
#
#     # Need authentication while uploading attachments.
#     'attachment_require_authentication': True,
#
#     # Set `upload_to` function for attachments.
#     # 'attachment_upload_to': my_custom_upload_to_func(),
#
#     # Set custom storage class for attachments.
#     'attachment_storage_class': 'my.custom.storage.class.name',
#
#     # Set custom model for attachments (default: 'django_summernote.Attachment')
#     'attachment_model': 'my.custom.attachment.model', # must inherit 'django_summernote.AbstractAttachment'
#
#     # You can disable attachment feature.
#     'disable_attachment': False,
#
#     # Set `True` to return attachment paths in absolute URIs.
#     'attachment_absolute_uri': False,
#
#     # test_func in summernote upload view. (Allow upload images only when user passes the test)
#     # https://docs.djangoproject.com/en/2.2/topics/auth/default/#django.contrib.auth.mixins.UserPassesTestMixin
#     # ```
#     # def example_test_func(request):
#     #     return request.user.groups.filter(name='group_name').exists()
#     # ```
#     # 'test_func_upload_view': example_test_func,
#
#     # You can add custom css/js for SummernoteWidget.
#     'css': (
#     ),
#     'js': (
#     ),
#
#     # You can also add custom css/js for SummernoteInplaceWidget.
#     # !!! Be sure to put {{ form.media }} in template before initiate summernote.
#     'css_for_inplace': (
#     ),
#     'js_for_inplace': (
#     ),
#
#     # Codemirror as codeview
#     # If any codemirror settings are defined, it will include codemirror files automatically.
#     'css': (
#         '//cdnjs.cloudflare.com/ajax/libs/codemirror/5.29.0/theme/monokai.min.css',
#     ),
#
#     # Lazy initialize
#     # If you want to initialize summernote at the bottom of page, set this as True
#     # and call `initSummernote()` on your page.
#     'lazy': True,
#
#     # To use external plugins,
#     # Include them within `css` and `js`.
#     'js': {
#         '/some_static_folder/summernote-ext-print.js',
#         '//somewhere_in_internet/summernote-plugin-name.js',
#     },
# }